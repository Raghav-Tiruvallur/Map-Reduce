const fs = require('fs');

//mapper splits text into words counts the frequency of each word, sorts them and then writes it to a file with fileName same as key
//input: path of the file whose content needs to be mapped
//output: paths of all the files that are generated because of map operation
const mapper = (file) =>{

    let fileContent = readFromFile(file)

    let wordList = {}
    let splitText =  fileContent.split(" ")

    for(let i=0; i<splitText.length; i++){
        let word = splitText[i].toLowerCase()
        if(wordList[word]){
            wordList[word]+=1
        } 
        else{
            wordList[word]=1
        }
    }

    wordList = sortObject(wordList)

    let filePaths = new Set()

    for(word in wordList){
        let filePath = writeToFile([word, wordList[word]])
        filePaths.add(filePath)
    }

    return filePaths
}

//read content of the file
//input: path of the file to be read
//output: content of file
const readFromFile = (file) => {
    let fileContent

    try{
        fileContent = fs.readFileSync(file, { encoding: 'utf8' })
    }
    catch(err){
        console.log("Error while reading file"+{file})
    }

    fileContent = fileContent.replace(/[\n\r]+/g, ' ').replace(/\s{2,}/g,' ').replace(/^\s+|\s+$/,'')
    return fileContent
}


//sorts the dictionary that is generated by the mapper
//input: object to be sorted
//output: sorted object
const sortObject = (object) =>{
    return Object.keys(object).sort().reduce((result, key) =>{
        result[key] = object[key]
        return result
    }, {})
}

//writes the key and frequency of each file
//input: key or the word and its frequency that needs to be written
//output: path of the file that is generated
const writeToFile = (word) =>{

    if(process.platform === "win32")
    {
        dirName = __dirname.split('\\')
        dirName.pop()
        const fileName = dirName.join("\\") + "\\mapFiles\\"+ word[0] +".txt"
        try{
            fs.appendFileSync(fileName, word.toString()+" ")
        }
        catch (err){
            console.log("Error while writing to file"+{fileName})
            throw err
        }

        return fileName
    }
    else 
    {
        dirName = __dirname.split('/')
        dirName.pop()
        const fileName = dirName.join("/") + "/mapFiles/"+ word[0] +".txt"
        console.log(fileName)
        try{
            fs.appendFileSync(fileName, word.toString()+" ")
        }
        catch (err){
            console.log("Error while writing to file"+{fileName})
            throw err
        }

        return fileName
    }
}

module.exports = mapper


