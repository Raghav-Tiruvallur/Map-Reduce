const fs = require('fs');
const { dirname } = require('path');

//mapper splits text into words counts the frequency of each word, sorts them and then writes it to a file with fileName same as key
//input: path of the file whose content needs to be mapped
//output: paths of all the files that are generated because of map operation
const mapper = (file) =>{

    let fileContent = readFromFile(file)

    let wordList = {}
    let splitText =  fileContent.split(" ")

    for(let i=0; i<splitText.length; i++){
        let word = splitText[i].toLowerCase()
        if(wordList[word]){
            wordList[word]+=1
        } 
        else{
            wordList[word]=1
        }
    }

    // wordList = sortObject(wordList)
    let filePath = writeToFile(file, wordList)

    return filePath
}

//read content of the file
//input: path of the file to be read
//output: content of file
const readFromFile = (file) => {
    let fileContent

    try{
        fileContent = fs.readFileSync(file, { encoding: 'utf8' })
    }
    catch(err){
        console.log("Error while reading file"+{file})
    }

    fileContent = fileContent.replace(/[\n\r]+/g, ' ').replace(/\s{2,}/g,' ').replace(/^\s+|\s+$/,'')
    return fileContent
}


// //sorts the dictionary that is generated by the mapper
// //input: object to be sorted
// //output: sorted object
// const sortObject = (object) =>{
//     return Object.keys(object).sort().reduce((result, key) =>{
//         result[key] = object[key]
//         return result
//     }, {})
// }

//writes the key and frequency of each file
//input: key or the word and its frequency that needs to be written
//output: path of the file that is generated
const writeToFile = (file, setOfWords) =>{

    if(process.platform === "win32")
    {
        dirName = __dirname.split('\\')
        dirName.pop()
        fileName = file.split('/').pop()

        const filePath = dirName.join("\\") + "\\mapFiles\\"+ fileName
        try{
            fs.appendFileSync(filePath, JSON.stringify(setOfWords))
        }
        catch (err){
            console.log("Error while writing to file"+{filePath})
            throw err
        }

        return filePath
    }
    else 
    {
        dirName = __dirname.split('/')
        dirName.pop()
        fileName = file.split('/').pop()
        
        const filePath = dirName.join("/") + "/mapFiles/"+ fileName 
        try{
            fs.appendFileSync(filePath, JSON.stringify(setOfWords))
        }
        catch (err){
            console.log("Error while writing to file"+{filePath})
            throw err
        }

        return filePath
    }
}

module.exports = mapper


